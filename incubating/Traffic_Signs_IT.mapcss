meta {
  title: "Traffic Signs in Italy";
  description: "A stylesheet for traffic signs in Italy.";
  version: "0.1";
  author: "Marcello Perathoner";
  icon: "svgs/flag.svg";
  link: "https://github.com/FIXME";
  watch-modified: true;
}


globals {
    urls: map_build(
"II.5", "svgs/curva_pericolosa_a_sinistra.svg",
"II.4", "svgs/curva_pericolosa_a_destra.svg",
"II.7", "svgs/doppia_curva_sx.svg",
"II.6", "svgs/doppia_curva_dx.svg",
"II.15", "svgs/discesa_pericolosa.svg",
"II.16", "svgs/salita_ripida.svg",
"II.17", "svgs/strettoia_simmetrica.svg",
"II.19", "svgs/strettoia_asimmetrica_a_destra.svg",
"II.18", "svgs/strettoia_asimmetrica_a_sinistra.svg",
"II.1", "svgs/strada_deformata_figura_ii_1.svg",
"II.2", "svgs/dosso.svg",
"II.3", "svgs/cunetta.svg",
"II.22", "svgs/strada_sdrucciolevole.svg",
"II.26", "svgs/doppio_senso_di_circolazione_figura_ii_26.svg",
"II.31a", "svgs/semaforo_verticale.svg",
"II.31b", "svgs/semaforo_orizzontale.svg",
"II.13", "svgs/attraversamento_pericoloso.svg",
"II.23", "svgs/bambini.svg",
"II.24", "svgs/animali_domestici_vaganti.svg",
"II.25", "svgs/animali_selvatici_vaganti.svg",
"II.33", "svgs/forte_vento_laterale.svg",
"II.21", "svgs/banchina_pericolosa.svg",
"II.34", "svgs/pericolo_di_incendio.svg",
"II.29", "svgs/materiale_instabile.svg",
"II.30a", "svgs/caduta_massi_da_sinistra.svg",
"II.30b", "svgs/caduta_massi_da_destra.svg",
"II.14", "svgs/attraversamento_ciclabile.svg",
"II.32", "svgs/aeromobili.svg",
"II.27", "svgs/circolazione_rotatoria.svg",
"II.35", "svgs/altri_pericoli.svg",
"II.12", "svgs/attraversamento_tramviario.svg",
"II.28", "svgs/sbocco_su_molo.svg",
"II.8", "svgs/passaggio_a_livello_con_barriere.svg",
"II.9", "svgs/passaggio_a_livello_senza_barriere.svg",
"II.10a", "svgs/croce_di_s.andrea.svg",
"II.10b", "svgs/doppia_croce_di_santandrea.svg",
"II.11a", "svgs/pannello_distanziometrico_150.svg",
"II.11b", "svgs/pannello_distanziometrico_100.svg",
"II.11c", "svgs/pannello_distanziometrico_50.svg",
"II.20", "svgs/ponte_mobile.svg",
"II.36", "svgs/dare_precedenza.svg",
"II.37", "svgs/fermarsi_e_dare_precedenza_-_stop.svg",
"II.38", "svgs/distanza.svg",
"II.39", "svgs/preavviso.svg",
"II.40", "svgs/intersezione_con_precedenza_a_destra.svg",
"II.41", "svgs/dare_precedenza_nei_sensi_unici_alternati.svg",
"II.42", "svgs/fine_del_diritto_di_precedenza.svg",
"II.43a", "svgs/intersezione_con_diritto_di_precedenza.svg",
"II.43b", "svgs/intersezione_a_t_con_diritto_di_precedenza_dx.svg",
"II.43c", "svgs/intersezione_a_t_con_diritto_di_precedenza_sx.svg",
"II.43d", "svgs/confluenza_dx.svg",
"II.43e", "svgs/confluenza_sx.svg",
"II.44", "svgs/diritto_di_precedenza.svg",
"II.45", "svgs/diritto_di_precedenza_nei_sensi_unici_alternati.svg",
"II.46", "svgs/divieto_di_transito.svg",
"II.47", "svgs/senso_vietato.svg",
"II.48", "svgs/divieto_di_sorpasso.svg",
"II.49", "svgs/distanziamento_minimo_obbligatorio.svg",
"II.50", "maxspeed-empty.svg",
"II.51", "svgs/divieto_di_segnalazioni_acustiche.svg",
"II.52", "svgs/divieto_di_sorpasso_per_veicoli_oltre_35t.svg",
"II.53", "svgs/divieto_di_transito_alla_trazione_animale.svg",
"II.54", "svgs/transito_vietato_ai_pedoni.svg",
"II.55", "svgs/transito_vietato_ai_velocipedi_figura_ii_55.svg",
"II.56", "svgs/divieto_di_transito_motocicli.svg",
"II.57", "svgs/divieto_di_transito_a_veicoli_a_braccia.svg",
"II.58", "svgs/divieto_di_transito_a_tutti_gli_autoveicoli.svg",
"II.59", "svgs/divieto_di_transito_agli_autobus.svg",
"II.60a", "svgs/divieto_di_transito_ai_veicoli_da_trasporto.svg",
"II.60b", "svgs/transito_vietato_ai_veicoli_di_massa_a_pieno_carico_superiore_alle_..._tonnellate_figura_ii_60-b.svg",
"II.61", "svgs/divieto_di_transito_ai_veicoli_a_motore_con_rimorchio.svg",
"II.62", "svgs/divieto_di_transito_alle_macchine_agricole.svg",
"II.63", "svgs/divieto_di_transito_a_trasporti_pericolosi.svg",
"II.64a", "svgs/divieto_di_transito_ai_veicoli_con_esplosivi_od_infiammabili.svg",
"II.64b", "svgs/divieto_di_transito_agli_inquinanti_idrici.svg",
"II.65", "svgs/divieto_di_transito_larghezza_230m.svg",
"II.66", "svgs/divieto_di_transito_altezza_350m.svg",
"II.67", "svgs/divieto_di_transito_ai_veicoli_lunghi.svg",
"II.68", "svgs/transito_vietato_ai_veicoli_aventi_una_massa_superiore_a_..._tonnellate_figura_ii_68.svg",
"II.69", "svgs/transito_vietato_ai_veicoli_aventi_massa_per_asse_superiore_a_..._tonnellate_figura_ii_69.svg",
"II.70", "svgs/via_libera.svg",
"II.71", "maxspeed-end-empty.svg",
"II.72", "svgs/fine_del_divieto_di_sorpasso.svg",
"II.73", "svgs/fine_del_divieto_di_sorpasso_per_veicoli_oltre_35t.svg",
"II.74", "svgs/divieto_di_sosta.svg",
"II.75", "svgs/divieto_di_fermata.svg",
"II.76", "svgs/parcheggio.svg",
"II.77", "svgs/preavviso_di_parcheggio.svg",
"II.78", "svgs/passo_carrabile.svg",
"II.79", "svgs/parcheggio_riservato_pronto_soccorso.svg",
"II.80a", "svgs/direzione_obbligatoria_dritto.svg",
"II.80b", "svgs/direzione_obbligatoria_a_sinistra.svg",
"II.80c", "svgs/direzione_obbligatoria_a_destra.svg",
"II.80d", "svgs/preavviso_di_direzione_obbligatoria_a_destra.svg",
"II.80e", "svgs/preavviso_di_direzione_obbligatoria_a_sinistra.svg",
"II.81a", "svgs/direzioni_consentite_a_destra_ed_a_sinistra.svg",
"II.81b", "svgs/direzioni_consentite_a_dritto_ed_a_destra.svg",
"II.81c", "svgs/direzioni_consentite_a_dritto_ed_a_sinistra.svg",
"II.82a", "svgs/passaggio_obbligatorio_a_sinistra.svg",
"II.82b", "svgs/passaggio_obbligatorio_a_destra.svg",
"II.83", "svgs/passaggi_consentiti.svg",
"II.84", "svgs/rotatoria.svg",
"II.85", "svgs/limite_minimo_di_velocità_figura_ii_85.svg",
"II.86", "svgs/fine_limite_minimo_di_velocità_30.svg",
"II.87", "svgs/catene_da_neve_obbligatorie.svg",
"II.88", "svgs/percorso_pedonale.svg",
"II.89", "svgs/fine_percorso_pedonale.svg",
"II.90", "svgs/pista_ciclabile.svg",
"II.91", "svgs/fine_pista_ciclabile.svg",
"II.92a", "svgs/pista_ciclabile_contigua_al_marciapiede.svg",
"II.93a", "svgs/fine_pista_ciclabile_contigua_al_marciapiede.svg",
"II.92b", "svgs/percorso_pedonale_e_ciclabile.svg",
"II.93b", "svgs/fine_percorso_pedonale_e_ciclabile.svg",
"II.94", "svgs/percorso_riservato_ai_quadrupedi.svg",
"II.95", "svgs/fine_percorso_riservato_ai_quadrupedi.svg",
"II.96", "svgs/dogana.svg",
"II.97a", "svgs/confine_cee.svg",
"II.97b", "svgs/confine_francia.svg",
"II.99", "svgs/stazione.svg",
"II.272", "svgs/segnale_di_itinerario_extraurbano_figura_ii_272.svg",
"II.273", "svgs/inizio_centro_abitato_figura_ii_273.svg",
"II.274", "svgs/fine_centro_abitato_figura_ii_274.svg",
"II.275", "svgs/inizio_regione.svg",
"II.276", "svgs/inizio_provincia.svg",
"II.284", "svgs/localizzazione_polizia_municipale_figura_ii_284.svg",
"II.285", "svgs/segnale_di_conferma_autostradale_figura_ii_285.svg",
"II.294", "svgs/inizio_territorio_comunale.svg",
"II.295", "svgs/fiume.svg",
"II.302", "svgs/ospedale.svg",
"II.303", "svgs/attraversamento_pedonale.svg",
"II.304", "svgs/scuolabus.svg",
"II.305", "svgs/sos.svg",
"II.306", "svgs/sottopassaggio_pedonale.svg",
"II.307", "svgs/sovrappassaggio_pedonale.svg",
"II.308", "svgs/rampa_pedonale.svg",
"II.309", "svgs/strada_senza_uscita.svg",
"II.310", "svgs/preavviso_di_strada_senza_uscita_osx.svg",
"II.311", "svgs/preavviso_di_strada_senza_uscita_dx.svg",
"II.312", "svgs/velocità_consigliata_50.svg",
"II.313", "svgs/fine_velocità_consigliata_50.svg",
"II.314", "svgs/strada_riservata_ai_veicoli_a_motore.svg",
"II.315", "svgs/fine_strada_riservata_ai_veicoli_a_motore.svg",
"II.316", "svgs/galleria_blu.svg",
"II.317", "svgs/ponte_blu.svg",
"II.318", "svgs/zona_residenziale.svg",
"II.319", "svgs/fine_zona_residenziale.svg",
"II.320", "svgs/area_pedonale.svg",
"II.321", "svgs/fine_area_pedonale.svg",
"II.322a", "svgs/zona_traffico_limitato.svg",
"II.322b", "svgs/fine_zona_traffico_limitato.svg",
"II.323a", "zone-maxspeed-empty.svg",
"II.323b", "svgs/fine_zona_a_velocità_limitata_figura_ii_323-b.svg",
"II.324", "svgs/attraversamento_ciclabile_2.svg",
"II.325", "svgs/svolta_a_sx_semidiretta.svg",
"II.326", "svgs/svolta_a_sx_indiretta.svg",
"II.327", "svgs/inversione_di_marcia.svg",
"II.328", "svgs/piazzola_su_viabilità_ordinaria.svg",
"II.329", "svgs/piazzola_autostradale_sos.svg",
"II.330", "svgs/transitabilità_1.svg",
"II.337", "svgs/uso_corsie_figura_ii_337.svg",
"II.338", "svgs/uso_corsie_figura_ii_338.svg",
"II.339", "svgs/uso_corsie_figura_ii_339.svg",
"II.340", "svgs/uso_corsie_figura_ii_340.svg",
"II.341", "svgs/variazione_corsie_disponibili_figura_ii_341.svg",
"II.342", "svgs/variazione_corsie_disponibili_figura_ii_342.svg",
"II.345", "svgs/inizio_autostrada_figura_ii_345.svg",
"II.346", "svgs/segnale_fine_autostrada.svg",
"II.348", "svgs/senso_unico_a_destra.svg",
"II.349", "svgs/senso_unico_frontale.svg",
"II.350", "svgs/preavviso_deviazione_consigliata_autocarri.svg",
"II.351", "svgs/direzione_autocarri_consigliata.svg",
"II.352", "svgs/limiti_di_velocità_generali_figura_ii_352.svg",
"II.353", "svgs/pronto_soccorso_figura_ii_353.svg",
"II.354", "svgs/riparazioni.svg",
"II.355", "svgs/telefono.svg",
"II.356", "svgs/rifornimento.svg",
"II.357", "svgs/rifornimento_verde.svg",
"II.358", "svgs/fermata_autobus.svg",
"II.359", "svgs/fermata_tram.svg",
"II.360", "svgs/informazioni_figura_ii_360.svg",
"II.361", "svgs/ostello_per_la_gioventù.svg",
"II.362", "svgs/area_pic_nic.svg",
"II.363", "svgs/campeggio.svg",
"II.364", "svgs/radio_informazioni_stradali.svg",
"II.365", "svgs/albergo.svg",
"II.366", "svgs/bar.svg",
"II.367", "svgs/ristorante.svg",
"II.368", "svgs/parcheggio_di_scambio_con_autobus.svg",
"II.369", "svgs/parcheggio_di_scambio_con_tram.svg",
"II.370", "svgs/parcheggio_di_scambio_con_metro.svg",
"II.371", "svgs/parcheggio__escursionismo.svg",
"II.372", "svgs/auto_su_treno_figura_ii_372.svg",
"II.373", "svgs/auto_al_seguito_figura_ii_373.svg",
"II.374", "svgs/auto_su_nave.svg",
"II.375", "svgs/taxi.svg",
"II.376", "svgs/area_di_servizio.svg",
"II.377", "svgs/area_con_scarico_liquami.svg",
"MII.1", "distance-empty.svg",
"MII.2", "length-empty.svg",
"MII.3", "distance-empty.svg",
"MII.4a", "svgs/limitazione.svg",
"MII.4b", "svgs/eccezione.svg",
"MII.5a1", "svgs/inizio_vert.svg",
"MII.5a2", "svgs/continua_vert.svg",
"MII.5a3", "svgs/fine_vert.svg",
"MII.5b1", "svgs/inizio_orizz.svg",
"MII.5b2", "svgs/continua_orizz.svg",
"MII.5b3", "svgs/fine_orizz.svg",
"MII.6a", "svgs/segnaletica_in_rifacimento.svg",
"MII.6b", "svgs/incidente.svg",
"MII.6c", "svgs/attraversamento_binari.svg",
"MII.6d", "svgs/sgombraneve_in_azione.svg",
"MII.6e", "svgs/zona_soggetta_ad_allagamento.svg",
"MII.6f", "svgs/coda.svg",
"MII.6g", "svgs/mezzi_di_lavoro_in_azione.svg",
"MII.6h", "svgs/strada_sdrucciolevole_per_ghiaccio.svg",
"MII.6i", "svgs/strada_sdrucciolevole_per_pioggia.svg",
"MII.6l", "svgs/autocarri_in_rallentamento.svg",
"MII.6m", "svgs/rimozione_forzata.svg",
"MII.6n", "svgs/segnale_di_corsia.svg",
"MII.6p1", "svgs/tornante.svg",
"MII.6p2", "svgs/numero_del_tornante.svg",
"MII.6q1", "svgs/pulizia_meccanica_della_strada.svg",
"MII.6q2", "svgs/pulizia_meccanica_della_strada_1.svg",
"MII.7", "svgs/andamento_strada_principale.svg",
"MII.8a", "svgs/divieto_di_sosta_temporaneo.svg",
"MII.8b", "svgs/itinerario_obbligatorio_merci_pericolose.svg",
"MII.8c", "svgs/preavviso_deviazione_obbligatoria_autocarri.svg",
"MII.8d", "svgs/divieto_di_transito_autocarri.svg"
);
    aspects: map_build(
"II.5", 0.88,
"II.4", 0.88,
"II.7", 0.88,
"II.6", 0.88,
"II.15", 0.88,
"II.16", 0.88,
"II.17", 0.88,
"II.19", 0.88,
"II.18", 0.88,
"II.1", 0.88,
"II.2", 0.88,
"II.3", 0.88,
"II.22", 0.88,
"II.26", 0.88,
"II.31a", 0.88,
"II.31b", 0.88,
"II.13", 0.88,
"II.23", 0.88,
"II.24", 0.88,
"II.25", 0.88,
"II.33", 0.88,
"II.21", 0.88,
"II.34", 0.88,
"II.29", 0.88,
"II.30a", 0.88,
"II.30b", 0.88,
"II.14", 0.88,
"II.32", 0.88,
"II.27", 0.88,
"II.35", 0.88,
"II.12", 0.88,
"II.28", 0.88,
"II.8", 0.88,
"II.9", 0.88,
"II.10a", 0.52,
"II.10b", 0.73,
"II.11a", 1.0,
"II.11b", 1.0,
"II.11c", 1.0,
"II.20", 0.88,
"II.36", 0.88,
"II.37", 1.0,
"II.38", 0.38,
"II.39", 0.34,
"II.40", 0.88,
"II.41", 1.0,
"II.42", 1.0,
"II.43a", 0.88,
"II.43b", 0.88,
"II.43c", 0.88,
"II.43d", 0.88,
"II.43e", 0.88,
"II.44", 1.0,
"II.45", 1.0,
"II.46", 1.0,
"II.47", 1.0,
"II.48", 1.0,
"II.49", 1.0,
"II.50", 1.0,
"II.51", 1.0,
"II.52", 1.0,
"II.53", 1.0,
"II.54", 1.0,
"II.55", 1.0,
"II.56", 1.0,
"II.57", 1.0,
"II.58", 1.0,
"II.59", 1.0,
"II.60a", 1.0,
"II.60b", 1.0,
"II.61", 1.0,
"II.62", 1.0,
"II.63", 1.0,
"II.64a", 1.0,
"II.64b", 1.0,
"II.65", 1.0,
"II.66", 1.0,
"II.67", 1.0,
"II.68", 1.0,
"II.69", 1.0,
"II.70", 1.0,
"II.71", 1.0,
"II.72", 1.0,
"II.73", 1.0,
"II.74", 1.0,
"II.75", 1.0,
"II.76", 1.0,
"II.77", 1.0,
"II.78", 1.0,
"II.79", 1.0,
"II.80a", 1.0,
"II.80b", 1.0,
"II.80c", 1.0,
"II.80d", 1.0,
"II.80e", 1.0,
"II.81a", 1.0,
"II.81b", 1.0,
"II.81c", 1.0,
"II.82a", 1.0,
"II.82b", 1.0,
"II.83", 1.0,
"II.84", 1.0,
"II.85", 1.0,
"II.86", 1.0,
"II.87", 1.0,
"II.88", 1.0,
"II.89", 1.0,
"II.90", 1.0,
"II.91", 1.0,
"II.92a", 1.0,
"II.93a", 1.0,
"II.92b", 1.0,
"II.93b", 1.0,
"II.94", 1.0,
"II.95", 1.0,
"II.96", 1.0,
"II.97a", 1.0,
"II.97b", 1.0,
"II.99", 1.0,
"II.272", 0.93,
"II.273", 0.3,
"II.274", 0.84,
"II.275", 0.63,
"II.276", 0.63,
"II.284", 1.0,
"II.285", 0.54,
"II.294", 0.32,
"II.295", 0.69,
"II.302", 1.0,
"II.303", 1.0,
"II.304", 1.0,
"II.305", 1.0,
"II.306", 1.0,
"II.307", 1.0,
"II.308", 1.0,
"II.309", 1.0,
"II.310", 1.0,
"II.311", 1.0,
"II.312", 1.0,
"II.313", 1.0,
"II.314", 1.0,
"II.315", 1.0,
"II.316", 1.0,
"II.317", 1.0,
"II.318", 1.0,
"II.319", 1.0,
"II.320", 1.0,
"II.321", 1.0,
"II.322a", 1.0,
"II.322b", 1.0,
"II.323a", 1.0,
"II.323b", 1.0,
"II.324", 1.0,
"II.325", 0.74,
"II.326", 0.75,
"II.327", 1.0,
"II.328", 1.0,
"II.329", 1.0,
"II.330", 1.0,
"II.337", 1.0,
"II.338", 0.67,
"II.339", 1.0,
"II.340", 0.67,
"II.341", 1.0,
"II.342", 1.0,
"II.345", 1.0,
"II.346", 1.0,
"II.348", 0.25,
"II.349", 1.0,
"II.350", 1.0,
"II.351", 1.0,
"II.352", 1.0,
"II.353", 1.0,
"II.354", 1.0,
"II.355", 1.0,
"II.356", 1.0,
"II.357", 1.0,
"II.358", 1.0,
"II.359", 1.0,
"II.360", 1.0,
"II.361", 1.0,
"II.362", 1.0,
"II.363", 1.0,
"II.364", 1.0,
"II.365", 1.0,
"II.366", 1.0,
"II.367", 1.0,
"II.368", 1.0,
"II.369", 1.0,
"II.370", 1.0,
"II.371", 1.0,
"II.372", 1.0,
"II.373", 1.0,
"II.374", 1.0,
"II.375", 0.67,
"II.376", 0.63,
"II.377", 1.0,
"MII.1", 0.38,
"MII.2", 0.38,
"MII.3", 0.38,
"MII.4a", 0.38,
"MII.4b", 0.38,
"MII.5a1", 1.0,
"MII.5a2", 1.0,
"MII.5a3", 1.0,
"MII.5b1", 0.39,
"MII.5b2", 0.39,
"MII.5b3", 0.39,
"MII.6a", 1.0,
"MII.6b", 1.0,
"MII.6c", 0.38,
"MII.6d", 0.38,
"MII.6e", 0.34,
"MII.6f", 1.0,
"MII.6g", 0.38,
"MII.6h", 0.34,
"MII.6i", 0.38,
"MII.6l", 1.0,
"MII.6m", 0.38,
"MII.6n", 0.38,
"MII.6p1", 0.79,
"MII.6p2", 1.0,
"MII.6q1", 0.38,
"MII.6q2", 1.0,
"MII.7", 1.0,
"MII.8a", 1.0,
"MII.8b", 1.0,
"MII.8c", 1.0,
"MII.8d", 1.0
)
}


setting::icon_size {
    type: double;
    label: tr("Set the icon size...");
    default: 32;
}

/* turn off maxspeed drawing in elemstyle.mapcss */
node[prop(maxspeedclass, default)]::core_maxnodebg {
    symbol-shape: none;
    icon-image: none;
}
node[prop(maxspeedclass, default)]::core_maxnodefg {
    text: none;
    symbol-shape: none;
    icon-image: none;
}

/* select nodes to operate on */

node[traffic_sign=~/IT:M?II/] {
    set .sign;
}
node[direction!=backward].sign {
    set .sign-forward;
    traffic-sign-forward: tag("traffic_sign");
    maxspeed-forward: tag("maxspeed");
}
node[direction=backward].sign {
    set .sign-backward;
    traffic-sign-backward: tag("traffic_sign");
    maxspeed-backward: tag("maxspeed");
}
node["traffic_sign:forward"=~/IT:M?II/] {
    set .sign;
    set .sign-forward;
    traffic-sign-forward: tag("traffic_sign:forward");
    maxspeed-forward: tag("maxspeed:forward");
}
node["traffic_sign:backward"=~/IT:M?II/] {
    set .sign;
    set .sign-backward;
    traffic-sign-backward: tag("traffic_sign:backward");
    maxspeed-backward: tag("maxspeed:backward");
}

/* set a basic rotation */

node[direction=~/^[NWSE]+$/].sign {
    traffic-sign: tag("traffic_sign");
    maxspeed: tag("maxspeed");
    transformprop: transform(rotate(cardinal_to_radians(tag("direction")) + 3.14));
}
node[direction=~/^[.0-9]+$/].sign {
    traffic-sign: tag("traffic_sign");
    maxspeed: tag("maxspeed");
    transformprop: transform(rotate(degree_to_radians(tag("direction")) + 3.14));
}
/* we need the highway selector for the heading to work */
way[highway] > node.sign-forward,
way[highway] > node.sign-backward {
    transformprop: transform(rotate(heading()), translate(metric(5), 0));
    metric: true;
}

node[prop(traffic-sign)] {
    codes-noward: split_traffic_sign(prop(traffic-sign), "IT");
    icon-image: none;
}
node[prop(traffic-sign-forward)].sign {
    codes-forward: split_traffic_sign(prop(traffic-sign-forward), "IT");
    icon-image: none;
}
node[prop(traffic-sign-backward)] {
    codes-backward: split_traffic_sign(prop(traffic-sign-backward), "IT");
    icon-image: none;
}

/* set styles */

node.sign {
    yoffsetprop: eval(setting("icon_size") * 0.7);
    ydeltaprop: eval(setting("icon_size") * 0.4);

    text: none
}


node[prop(sign-noward, default)][map_get(get(prop(codes-noward, default), 0), "country") = "IT"]::noward0 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-noward, default), 0);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-noward: prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-noward) - prop(real-height) * 0.5;
            
}



node[prop(sign-noward, default)][map_get(get(prop(codes-noward, default), 1), "country") = "IT"]::noward1 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-noward, default), 1);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-noward: prop(yoffsetprop-noward, noward0) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-noward) - prop(real-height) * 0.5;
            
}



node[prop(sign-noward, default)][map_get(get(prop(codes-noward, default), 2), "country") = "IT"]::noward2 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-noward, default), 2);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-noward: prop(yoffsetprop-noward, noward1) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-noward) - prop(real-height) * 0.5;
            
}



node[prop(sign-noward, default)][map_get(get(prop(codes-noward, default), 3), "country") = "IT"]::noward3 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-noward, default), 3);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-noward: prop(yoffsetprop-noward, noward2) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-noward) - prop(real-height) * 0.5;
            
}



node[prop(sign-noward, default)][map_get(get(prop(codes-noward, default), 4), "country") = "IT"]::noward4 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-noward, default), 4);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-noward: prop(yoffsetprop-noward, noward3) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-noward) - prop(real-height) * 0.5;
            
}



node[prop(sign-forward, default)][map_get(get(prop(codes-forward, default), 0), "country") = "IT"]::forward0 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-forward, default), 0);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-forward: prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-forward) - prop(real-height) * 0.5;
            
}



node[prop(sign-forward, default)][map_get(get(prop(codes-forward, default), 1), "country") = "IT"]::forward1 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-forward, default), 1);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-forward: prop(yoffsetprop-forward, forward0) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-forward) - prop(real-height) * 0.5;
            
}



node[prop(sign-forward, default)][map_get(get(prop(codes-forward, default), 2), "country") = "IT"]::forward2 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-forward, default), 2);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-forward: prop(yoffsetprop-forward, forward1) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-forward) - prop(real-height) * 0.5;
            
}



node[prop(sign-forward, default)][map_get(get(prop(codes-forward, default), 3), "country") = "IT"]::forward3 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-forward, default), 3);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-forward: prop(yoffsetprop-forward, forward2) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-forward) - prop(real-height) * 0.5;
            
}



node[prop(sign-forward, default)][map_get(get(prop(codes-forward, default), 4), "country") = "IT"]::forward4 {

    icon-transform: prop(transformprop, default);
    metric: true;

    codes: get(prop(codes-forward, default), 4);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-forward: prop(yoffsetprop-forward, forward3) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-forward) - prop(real-height) * 0.5;
            
}



node[prop(sign-backward, default)][map_get(get(prop(codes-backward, default), 0), "country") = "IT"]::backward0 {

    icon-transform: transform(rotate(0.5turn), prop(transformprop, default));
    metric: true;

    codes: get(prop(codes-backward, default), 0);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-backward: prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-backward) - prop(real-height) * 0.5;
            
}



node[prop(sign-backward, default)][map_get(get(prop(codes-backward, default), 1), "country") = "IT"]::backward1 {

    icon-transform: transform(rotate(0.5turn), prop(transformprop, default));
    metric: true;

    codes: get(prop(codes-backward, default), 1);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-backward: prop(yoffsetprop-backward, backward0) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-backward) - prop(real-height) * 0.5;
            
}



node[prop(sign-backward, default)][map_get(get(prop(codes-backward, default), 2), "country") = "IT"]::backward2 {

    icon-transform: transform(rotate(0.5turn), prop(transformprop, default));
    metric: true;

    codes: get(prop(codes-backward, default), 2);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-backward: prop(yoffsetprop-backward, backward1) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-backward) - prop(real-height) * 0.5;
            
}



node[prop(sign-backward, default)][map_get(get(prop(codes-backward, default), 3), "country") = "IT"]::backward3 {

    icon-transform: transform(rotate(0.5turn), prop(transformprop, default));
    metric: true;

    codes: get(prop(codes-backward, default), 3);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-backward: prop(yoffsetprop-backward, backward2) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-backward) - prop(real-height) * 0.5;
            
}



node[prop(sign-backward, default)][map_get(get(prop(codes-backward, default), 4), "country") = "IT"]::backward4 {

    icon-transform: transform(rotate(0.5turn), prop(transformprop, default));
    metric: true;

    codes: get(prop(codes-backward, default), 4);
    traffic-sign-id:    map_get(prop(codes), "id");
    traffic-sign-texts: map_get(prop(codes), "text");

    icon-image: concat(map_get(prop(urls, globals), prop(traffic-sign-id), "unknown"),
                "?", URL_query_encode("text", prop(traffic-sign-texts)));
    real-height: eval(setting("icon_size") * map_get(prop(aspects, globals), prop(traffic-sign-id), 1.0));

    font-size: eval(prop(real-height) * 0.75);
    

    yoffsetprop-backward: prop(yoffsetprop-backward, backward3) + prop(real-height);
            

    icon-offset-y: prop(yoffsetprop-backward) - prop(real-height) * 0.5;
            
}



/* There's a bug in the JOSM mapcss implementation. If you have a ruleset that matches
multiple layers like:

    node[traffic_sign:forward]::forward,
    node[traffic_sign:backward]::backward {
        icon-image: foo;
    }

then on a node with both of the above mentioned tags, only the "forward" level will get
an icon-image. */

node[prop(sign, default)]::* {
    major-z-index: 7;
    icon-width: setting("icon_size");
    icon-height: setting("icon_size");

    text-anchor-horizontal: center;
    text-anchor-vertical: center;
    font-weight: bold;
    text-color: black;
}

node|z-16[prop(sign, default)]::* {
    icon-image: none;
    text: none;
}

